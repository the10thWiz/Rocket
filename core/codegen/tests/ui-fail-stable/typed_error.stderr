error: only one lifetime is supported
 --> tests/ui-fail-stable/typed_error.rs:8:14
  |
8 | struct Thing1<'a, 'b> {
  |              ^

error: [note] error occurred while deriving `TypedError`
 --> tests/ui-fail-stable/typed_error.rs:7:10
  |
7 | #[derive(TypedError)]
  |          ^^^^^^^^^^
  |
  = note: this error originates in the derive macro `TypedError` (in Nightly builds, run with -Z macro-backtrace for more info)

error: [note] error occurred while deriving `Transient`
 --> tests/ui-fail-stable/typed_error.rs:7:10
  |
7 | #[derive(TypedError)]
  |          ^^^^^^^^^^
  |
  = note: this error originates in the derive macro `TypedError` (in Nightly builds, run with -Z macro-backtrace for more info)

error: only one lifetime is supported
  --> tests/ui-fail-stable/typed_error.rs:20:12
   |
20 | enum Thing3<'a, 'b> {
   |            ^

error: [note] error occurred while deriving `TypedError`
  --> tests/ui-fail-stable/typed_error.rs:19:10
   |
19 | #[derive(TypedError)]
   |          ^^^^^^^^^^
   |
   = note: this error originates in the derive macro `TypedError` (in Nightly builds, run with -Z macro-backtrace for more info)

error: [note] error occurred while deriving `Transient`
  --> tests/ui-fail-stable/typed_error.rs:19:10
   |
19 | #[derive(TypedError)]
   |          ^^^^^^^^^^
   |
   = note: this error originates in the derive macro `TypedError` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0601]: `main` function not found in crate `$CRATE`
  --> tests/ui-fail-stable/typed_error.rs:32:19
   |
32 | enum EmptyEnum { }
   |                   ^ consider adding a `main` function to `$DIR/tests/ui-fail-stable/typed_error.rs`

error[E0277]: the trait bound `InnerNonError: TypedError<'r>` is not satisfied
  --> tests/ui-fail-stable/typed_error.rs:15:5
   |
15 | /     #[error(source)]
16 | |     inner: InnerNonError,
   | |_________^ the trait `TypedError<'r>` is not implemented for `InnerNonError`
   |
   = help: the following other types implement trait `TypedError<'r>`:
             <InnerError as TypedError<'r>>
             <Thing2 as TypedError<'r>>
             <Thing4 as TypedError<'r>>
             <EmptyEnum as TypedError<'r>>
             <rocket::either::Either<L, R> as TypedError<'r>>
             <rocket::serde::json::serde_json::Error as TypedError<'r>>
             <rocket::serde::msgpack::Error as TypedError<'r>>
             <rmp_serde::encode::Error as TypedError<'r>>
           and $N others
   = note: required for the cast from `&InnerNonError` to `&(dyn TypedError<'r> + 'r)`

error[E0277]: the trait bound `InnerNonError: TypedError<'r>` is not satisfied
  --> tests/ui-fail-stable/typed_error.rs:27:7
   |
27 |     A(#[error(source)] InnerNonError),
   |       ^ the trait `TypedError<'r>` is not implemented for `InnerNonError`
   |
   = help: the following other types implement trait `TypedError<'r>`:
             <InnerError as TypedError<'r>>
             <Thing2 as TypedError<'r>>
             <Thing4 as TypedError<'r>>
             <EmptyEnum as TypedError<'r>>
             <rocket::either::Either<L, R> as TypedError<'r>>
             <rocket::serde::json::serde_json::Error as TypedError<'r>>
             <rocket::serde::msgpack::Error as TypedError<'r>>
             <rmp_serde::encode::Error as TypedError<'r>>
           and $N others
   = note: required for the cast from `&InnerNonError` to `&(dyn TypedError<'r> + 'r)`

error[E0004]: non-exhaustive patterns: type `&EmptyEnum` is non-empty
  --> tests/ui-fail-stable/typed_error.rs:31:10
   |
31 | #[derive(TypedError)]
   |          ^^^^^^^^^^
   |
note: `EmptyEnum` defined here
  --> tests/ui-fail-stable/typed_error.rs:32:6
   |
32 | enum EmptyEnum { }
   |      ^^^^^^^^^
   = note: the matched value is of type `&EmptyEnum`
   = note: references are always considered inhabited
   = note: this error originates in the derive macro `TypedError` (in Nightly builds, run with -Z macro-backtrace for more info)
